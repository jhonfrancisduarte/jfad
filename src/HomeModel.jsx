/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 HomeModel.glb --transform --keepmeshes --keepmaterials --format --shadows 
Files: HomeModel.glb [60.87MB] > C:\Users\user\Desktop\HomeModel-transformed.glb [2.38MB] (96%)
*/

import React, { useRef, useEffect, useState } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export default function HomeModel(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/HomeModel-transformed.glb');
  const { actions } = useAnimations(animations, group);
  const [isClickingModel, setIsClickingModel] = useState(false); 

  useEffect(() => {
    actions.idle.play();
  }, [actions]);
  
  const handleMouseClick = () => {
    if (!isClickingModel) {
      setIsClickingModel(true);
      const wavingAction = actions.waving;
      wavingAction.reset().play();
      wavingAction.setEffectiveTimeScale(1.3);
  
      setTimeout(() => {
        actions.idle.crossFadeFrom(wavingAction, 0.01, true);
        wavingAction.setEffectiveTimeScale(1);
        setIsClickingModel(false);
      }, wavingAction.getClip().duration * 750);
    }
  };


  return (
    <group ref={group} {...props} dispose={null} onPointerDown={handleMouseClick}>
      <group name="Scene">
        <group name="Armature" position={[-0.011, -1.182, -0.018]} rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.mixamorig7Hips} />
          <skinnedMesh name="Ch33_Belt" geometry={nodes.Ch33_Belt.geometry} material={materials.Ch33_body} skeleton={nodes.Ch33_Belt.skeleton} />
          <skinnedMesh name="Ch33_Body" geometry={nodes.Ch33_Body.geometry} material={materials.Ch33_body} skeleton={nodes.Ch33_Body.skeleton} />
          <skinnedMesh name="Ch33_Hair" geometry={nodes.Ch33_Hair.geometry} material={materials.Ch33_hair} skeleton={nodes.Ch33_Hair.skeleton} />
          <skinnedMesh name="Ch33_Pants" geometry={nodes.Ch33_Pants.geometry} material={materials.Black} skeleton={nodes.Ch33_Pants.skeleton} />
          <skinnedMesh name="Ch33_Shirt" geometry={nodes.Ch33_Shirt.geometry} material={materials.white} skeleton={nodes.Ch33_Shirt.skeleton} />
          <skinnedMesh name="Ch33_Shoes" geometry={nodes.Ch33_Shoes.geometry} material={materials.Ch33_body} skeleton={nodes.Ch33_Shoes.skeleton} />
          <group name="Ch33_Suit">
            <skinnedMesh name="Mesh001" geometry={nodes.Mesh001.geometry} material={materials.Black} skeleton={nodes.Mesh001.skeleton} />
            <skinnedMesh name="Mesh001_1" geometry={nodes.Mesh001_1.geometry} material={materials.shinyBlack} skeleton={nodes.Mesh001_1.skeleton} />
          </group>
          <skinnedMesh name="Ch33_Tie" geometry={nodes.Ch33_Tie.geometry} material={materials.Ch33_body} skeleton={nodes.Ch33_Tie.skeleton} />
          <skinnedMesh name="FaceBuilderHead" geometry={nodes.FaceBuilderHead.geometry} material={materials.kt_facebuilder_material} skeleton={nodes.FaceBuilderHead.skeleton} />
        </group>
        <mesh name="Platform" castShadow receiveShadow geometry={nodes.Platform.geometry} material={materials.shinyBlack} position={[0.127, -1.223, 0.044]} />
      </group>
    </group>
  )
}

useGLTF.preload('/HomeModel-transformed.glb')
